import type { ConfigOption, Configuration, CoreSchema } from '@bugsnag/core-performance';
import type { NetworkRequestCallback } from '@bugsnag/request-tracker-performance';
import type { BrowserNetworkRequestInfo } from './auto-instrumentation';
import type { RoutingProvider } from './routing-provider';
import type { SendPageAttributes } from './send-page-attributes';
export interface BrowserSchema extends CoreSchema {
    autoInstrumentFullPageLoads: ConfigOption<boolean>;
    autoInstrumentNetworkRequests: ConfigOption<boolean>;
    autoInstrumentRouteChanges: ConfigOption<boolean>;
    generateAnonymousId: ConfigOption<boolean>;
    routingProvider: ConfigOption<RoutingProvider>;
    settleIgnoreUrls: ConfigOption<Array<string | RegExp>>;
    networkRequestCallback: ConfigOption<NetworkRequestCallback<BrowserNetworkRequestInfo>>;
    sendPageAttributes: ConfigOption<SendPageAttributes>;
    serviceName: ConfigOption<string>;
}
export interface BrowserConfiguration extends Configuration {
    autoInstrumentFullPageLoads?: boolean;
    autoInstrumentNetworkRequests?: boolean;
    autoInstrumentRouteChanges?: boolean;
    generateAnonymousId?: boolean;
    routingProvider?: RoutingProvider;
    settleIgnoreUrls?: Array<string | RegExp>;
    networkRequestCallback?: NetworkRequestCallback<BrowserNetworkRequestInfo>;
    sendPageAttributes?: SendPageAttributes;
    serviceName?: string;
}
export declare function createSchema(hostname: string, defaultRoutingProvider: RoutingProvider): BrowserSchema;
//# sourceMappingURL=config.d.ts.map