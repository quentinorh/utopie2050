import type { Clock, SpanInternal } from '@bugsnag/core-performance';
interface PerformanceWithNavigationTiming {
    getEntriesByName: typeof performance.getEntriesByName;
    getEntriesByType: typeof performance.getEntriesByType;
    timing: {
        responseStart: number;
        navigationStart: number;
    };
}
export declare class WebVitals {
    private readonly performance;
    private readonly clock;
    private readonly observers;
    private largestContentfulPaint;
    private cumulativeLayoutShift;
    constructor(performance: PerformanceWithNavigationTiming, clock: Clock, PerformanceObserverClass?: typeof PerformanceObserver);
    attachTo(span: SpanInternal): void;
    private firstContentfulPaint;
    private timeToFirstByte;
    private firstInputDelay;
    private observeLargestContentfulPaint;
    private observeLayoutShift;
}
export {};
//# sourceMappingURL=web-vitals.d.ts.map