import type { InternalConfiguration, Plugin, SpanContextStorage, SpanFactory } from '@bugsnag/core-performance';
import type { NetworkRequestInfo, RequestTracker } from '@bugsnag/request-tracker-performance';
import type { BrowserConfiguration } from '../config';
export interface BrowserNetworkRequestInfo extends NetworkRequestInfo {
    readonly type: PerformanceResourceTiming['initiatorType'];
    /**
     * Experimental. Whether to propagate trace context by adding a `traceparent` header to the request.
     */
    propagateTraceContext?: boolean;
}
export declare class NetworkRequestPlugin implements Plugin<BrowserConfiguration> {
    private spanFactory;
    private readonly spanContextStorage;
    private fetchTracker;
    private xhrTracker;
    private configEndpoint;
    private networkRequestCallback;
    private logger;
    constructor(spanFactory: SpanFactory<BrowserConfiguration>, spanContextStorage: SpanContextStorage, fetchTracker: RequestTracker, xhrTracker: RequestTracker);
    configure(configuration: InternalConfiguration<BrowserConfiguration>): void;
    private trackRequest;
    private shouldTrackRequest;
    private getExtraRequestHeaders;
}
//# sourceMappingURL=network-request-plugin.d.ts.map