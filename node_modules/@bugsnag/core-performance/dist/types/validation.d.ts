import type { OnSpanEndCallback } from './batch-processor';
import type { Configuration, Logger } from './config';
import type { PersistedProbability } from './persistence';
import type { Plugin } from './plugin';
import type { ParentContext } from './span';
import type { SpanContext } from './span-context';
import type { Time } from './time';
export declare const isBoolean: (value: unknown) => value is boolean;
export declare const isObject: (value: unknown) => value is Record<string, unknown>;
export declare const isNumber: (value: unknown) => value is number;
export declare const isString: (value: unknown) => value is string;
export declare const isStringWithLength: (value: unknown) => value is string;
export declare const isLogger: (value: unknown) => value is Logger;
export declare const isStringArray: (value: unknown) => value is string[];
export declare const isStringOrRegExpArray: (value: unknown) => value is Array<string | RegExp>;
export declare function isPersistedProbability(value: unknown): value is PersistedProbability;
export declare const isSpanContext: (value: unknown) => value is SpanContext;
export declare const isParentContext: (value: unknown) => value is ParentContext;
export declare function isTime(value: unknown): value is Time;
export declare function isPlugin(value: unknown): value is Plugin<unknown extends Configuration ? unknown : Configuration>;
export declare function isPluginArray(value: unknown): value is Array<Plugin<unknown extends Configuration ? unknown : Configuration>>;
export declare function isOnSpanEndCallbacks(value: unknown): value is OnSpanEndCallback[];
//# sourceMappingURL=validation.d.ts.map